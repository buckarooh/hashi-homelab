job "lidarr" {
  region = var.region
  datacenters = var.datacenters_public
  type        = "service"

  meta {
    version = "2"
  }

  constraint {
    attribute = "${meta.shared_mount}"
    operator  = "="
    value     = "true"
  }

  group "downloaders" {
    count = 1 

    network {
      port "http" {
        host_network = "tailscale"
        to = "8686"
      }
    }

    task "lidarr" {
      driver = "docker"
      config {
        image = "linuxserver/lidarr:8.1.2135"
        ports = ["http"]
        volumes = [
          "${var.shared_dir}lidarr:/config",
          "${var.downloads_dir}:/downloads",
          "${var.music_dir}:/music",
          "${var.music_dir}:/home/media/Music",
        ]
      }

      service {
        port = "http"
	name = "lidarr"
        tags = [
          "traefik.enable=true",
          "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https",
          "traefik.http.routers.${NOMAD_TASK_NAME}_insecure.middlewares=httpsRedirect",
          "traefik.http.routers.${NOMAD_TASK_NAME}_insecure.rule=Host(`${NOMAD_TASK_NAME}${var.tld}`)",
          "traefik.http.routers.${NOMAD_TASK_NAME}.tls.domains[0].sans=${NOMAD_TASK_NAME}${var.tld}",
          "traefik.http.routers.${NOMAD_TASK_NAME}.tls.certresolver=sample",
          "traefik.http.routers.${NOMAD_TASK_NAME}.middlewares=httpsRedirect"
        ]
        check {
          type     = "tcp"
          interval = "10s"
          timeout  = "2s"
        }
      }

      resources {
        cpu    = 100
        memory = 1024
      }
    }
  }
}

variable "region" {
    type = string
}

variable "datacenters_public" {
    type = list(string)
}

variable "tld" {
    type = string
}

variable "shared_dir" {
    type = string
}

variable "downloads_dir" {
    type = string
}

variable "music_dir" {
    type = string
}
