job "docker-registry" {
  region = var.region
  datacenters = var.datacenters
  type        = "service"

  meta {
    version = "2"
  }

  group "infrastructure" {
    count = 1 
    task "docker-registry" {
      driver = "docker"
      config {
        image = "registry:2.7.1"
        volumes = [
          "${var.shared_dir}docker-registry:/data",
        ]

        network_mode = "host"
      }
      env {
        REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY = "/data"
        REGISTRY_HTTP_ADDR = "${NOMAD_ADDR_http}"
      }
      service {
        port = "http"
	name = "docker-registry"
        tags = [
          "traefik.enable=true",
          "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https",
          "traefik.http.routers.${NOMAD_TASK_NAME}_insecure.middlewares=httpsRedirect",
          "traefik.http.routers.${NOMAD_TASK_NAME}_insecure.rule=Host(`${NOMAD_TASK_NAME}${var.tld}`)",
          "traefik.http.routers.${NOMAD_TASK_NAME}.tls.domains[0].sans=${NOMAD_TASK_NAME}${var.tld}",
          "traefik.http.routers.${NOMAD_TASK_NAME}.tls.certresolver=sample",
          "traefik.http.routers.${NOMAD_TASK_NAME}.middlewares=httpsRedirect"
        ]
        check {
          type     = "http"
          path     = "/"
          interval = "10s"
          timeout  = "2s"
        }
      }

      resources {
        cpu    = 20
        memory = 256
        network {
          port "http" { static = "5000" }
        }
      }
    }
  }
}

variable "region" {
    type = string
}

variable "datacenters" {
    type = list(string)
}

variable "tld" {
    type = string
}

variable "shared_dir" {
    type = string
}
