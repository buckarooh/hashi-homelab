job "owntracks-recorder" {
  region = var.region
  datacenters = var.datacenters
  type        = "service"

  meta {
    version = "8"
  }

  constraint {
    attribute = "${meta.shared_mount}"
    operator  = "="
    value     = "true"
  }

  group "homeautomation" {
    count = 1 

    network {
      port "http" {
        host_network = "tailscale"
        static = "8989"
      }
    }

    task "owntracks" {
      driver = "docker"
      config {
        image = "owntracks/recorder"
        args = [
          "--http-host", "${NOMAD_IP_http}"
        ]
        force_pull = true
        network_mode = "host"
        volumes = [
          "${var.shared_dir}owntracks-recorder:/store/",
          "${var.shared_dir}owntracks-recorder/views:/htdocs/views/",
        ]
      }

      service {
        port = "http"
	      name = "owntracks"
        tags = [
          "traefik.enable=true",
          "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https",
          "traefik.http.routers.${NOMAD_TASK_NAME}_insecure.middlewares=httpsRedirect",
          "traefik.http.routers.${NOMAD_TASK_NAME}_insecure.rule=Host(`${NOMAD_TASK_NAME}${var.tld}`)",
          "traefik.http.routers.${NOMAD_TASK_NAME}.tls.domains[0].sans=${NOMAD_TASK_NAME}${var.tld}",
          "traefik.http.routers.${NOMAD_TASK_NAME}.tls.certresolver=sample",
          "traefik.http.middlewares.malpotAuth.basicauth.users=${var.auth}",
          "traefik.http.routers.${NOMAD_TASK_NAME}.middlewares=httpsRedirect, malpotAuth"
        ]
        check {
          type     = "http"
          path     = "/"
          interval = "10s"
          timeout  = "10s"
        }
      }

      env {
        TZ = "Europe/Amsterdam"
        #OTR_HTTPHOST = "${NOMAD_ADDR_http}"
        #OTR_HTTPPORT = "${NOMAD_PORT_http}"
        OTR_HOST = "100.82.104.95"
        OTR_PORT = var.otr_pass
        OTR_USER = "mqtt"
        OTR_PASS = "Zee1tuiGha9h"
        OTR_STORAGEDIR = "/store"
        OTR_VIEWSDIR = "/store/views"
        #OTR_CAPATH = "/etc/ssl/certs"
      }

      resources {
        cpu    = 100
        memory = 256
      }
    }
  }
}

variable "region" {
    type = string
}

variable "datacenters" {
    type = list(string)
}

variable "tld" {
    type = string
}

variable "shared_dir" {
    type = string
}

variable "auth" {}

variable "otr_pass" {}
