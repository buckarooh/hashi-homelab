job "coredns" {
  region = var.region
  datacenters = ["dc1"]
  type        = "system"

  meta {
    version = "2"
  }

  constraint {
    attribute = "${meta.dns}"
    operator  = "="
    value     = "true"
  }

  group "infrastructure" {
    count = 1 

    network {
      mode = "host"
      port "dns" {
        static = "53"
        host_network = "lan"
      }
      port "metrics" {
        static = "9153"
        host_network = "tailscale"
      }
    }

    task "coredns" {
      driver = "docker"
      config {
        image = "coredns/coredns:1.10.1"
        network_mode = "host"
        ports = ["dns", "metrics"]
        args = ["-conf", "local/coredns/corefile"]
      }

      service {
        port = "dns"
	name = "coredns"
        tags = ["coredns"]
        check {
          type     = "tcp"
          interval = "10s"
          timeout  = "2s"
        }
      }
      service {
        port = "metrics"
	name = "coredns"
        tags = ["metrics", "coredns"]
      }

      template {
data = <<EOH
. {
  bind {{ env "NOMAD_IP_dns" }} 192.168.50.2
  {{ range service "pihole" }}forward . {{ .Address }}:8053{{ end }}
  log
  errors
  prometheus {{ env "NOMAD_IP_metrics" }}:9153
}
home.:53 {
  bind {{ env "NOMAD_IP_dns" }} 192.168.50.2
  forward . {{ sockaddr "GetInterfaceIP \"tailscale0\"" }}:8600
  log
  prometheus {{ env "NOMAD_IP_metrics" }}:9153
}
EOH
        destination = "local/coredns/corefile"
        env         = false
        change_mode = "signal"
        change_signal = "SIGHUP"
        left_delimiter  = "{{"
        right_delimiter = "}}"

      }

      resources {
        cpu    = 100
        memory = 128
      }
    }
  }
}

variable "region" {}


